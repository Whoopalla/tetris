name: C Raylib Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install mingw
        shell: bash

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
        sudo apt-get update
        sudo apt-get install -y gcc make libgl1-mesa-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev
        shell: bash

      - name: Compile build.c (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          gcc -o nob.exe nob.c
        shell: bash
        working-directory: ./

      - name: Compile build.c (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          gcc -o nob nob.c
        shell: bash
        working-directory: ./

      - name: Run build executable
        run: |
          chmod +x nob || true
          ./nob${{ matrix.os == 'windows-latest' && '.exe' || '' }} -release
        shell: bash
        working-directory: ./

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: project-build-${{ matrix.os }}
          path: |
            build
            *.o
            *.a
            *.exe
            mygame*
